#!/usr/bin/env python

import logging, os, json, bson, re, pymongo
from bottle import Bottle, request

api_version = "28" #API version, please iterate every time you push a version

application = Bottle()
app = application

@app.route('/')
def root():
    return "Welcome to BT API " + api_version

@app.get('/url/<posted_host:re:[^@]*>/path/<posted_path:re:[^@]*>', method='GET')
def hash_get(posted_host,posted_path):
    """Returns all the hashes for a given url.

    Keyword arguments:
    posted_url -- the url you want the hashes for.
    """
    conn = pymongo.Connection(os.environ['OPENSHIFT_MONGODB_DB_URL'])
    db = conn.server
    result = db.hash_storage.find({ "host": posted_host, "path":posted_path }, { "host": 0, "_id":0, "path":0, "type":0 })
    response = {"fingerprints":list(result)}
    return json.dumps(response)

@app.post('/url', method='POST')
def hash_put():
    """Stores a given url and hash.

    Data must be posted in JSON format in the form:
    {url:theurltosubmit,hash:thehashtosubmit}
    """
    posted_data = json.loads(request.body.read().decode("utf-8"))
    posted_host = posted_data['host']
    posted_path = posted_data['path']
    posted_type = posted_data['type']
    posted_hash = posted_data['hash']
    if(is_sha_256_hash(posted_hash)):
        conn = pymongo.Connection(os.environ['OPENSHIFT_MONGODB_DB_URL'])
        db = conn.server
        db.hash_storage.update({"host": posted_host, "path":posted_path, "type":posted_type, "hash":posted_hash},{ "$inc": { "num": 1 } },upsert=True)
    else:
        abort(400, "SHA256 Hash not submitted!")
    
def is_sha_256_hash(name):
    """Check if a string is actually an SHA-256 hash.

    Keyword arguments:
    name -- the string you want to check
    """
    if len(name) == 64:
        return True
    else:
        return False
